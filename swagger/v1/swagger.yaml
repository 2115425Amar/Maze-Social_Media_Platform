openapi: 3.0.3
info:
  title: Posts API
  version: 1.0.0
  description: API endpoints for managing posts

servers:
  - url: http://localhost:3000

paths:
  /api/v1/posts:
    get:
      summary: List all posts or posts for a specific user
      tags:
        - Posts
      parameters:
        - name: user_id
          in: query
          description: Filter posts by user ID
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '404':
          description: User not found
    post:
      summary: Create a new post
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '201':
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '422':
          description: Validation failed

  /api/v1/posts/{id}:
    get:
      summary: Get a specific post
      tags:
        - Posts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '403':
          description: Not authorized
        '404':
          description: Post not found

    put:
      summary: Update a post
      tags:
        - Posts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '200':
          description: Post updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '403':
          description: Not authorized
        '422':
          description: Validation errors

    delete:
      summary: Delete a post
      tags:
        - Posts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Post deleted
        '403':
          description: Not authorized
        '404':
          description: Post not found

components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        public:
          type: boolean
        user_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'

    PostInput:
      type: object
      required:
        - post
      properties:
        post:
          type: object
          properties:
            description:
              type: string
            public:
              type: boolean
          required:
            - description

    Comment:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        user_id:
          type: integer
        post_id:
          type: integer
        created_at:
          type: string
          format: date-time
